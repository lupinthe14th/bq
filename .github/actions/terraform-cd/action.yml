---
name: terraform-cd
description: terraform cd action for gcp
inputs:
  github_token:
    description: github token
    required: true
  working-directory:
    description: working directory
    required: true
    default: ""
  workload_identity_provider:
    description: |-
      The full identifier of the Workload Identity Provider, including the
      project number, pool name, and provider name. If provided, this must be
      the full identifier which includes all parts, for example:
      "projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider".
      This is mutually exclusive with "credentials_json".
    required: true
  service_account:
    description: |-
      Email address or unique identifier of the Google Cloud service account for
      which to generate credentials. This is required if
      "workload_identity_provider" is specified.
    required: true

runs:
  using: composite
  steps:
    - name: Detect Terraform version
      run: |
        echo "TF_VERSION=$(cat "$GITHUB_WORKSPACE"/.terraform-version)" >> "$GITHUB_ENV"
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - id: "auth"
      name: "Authenticate to Google Cloud"
      uses: "google-GitHub-actions/auth@v2"
      with:
        create_credentials_file: true
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}

    - id: "setup"
      name: "set up for terraform command"
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
        cli_config_credentials_token: ${{ inputs.tf_api_token }}

    - id: "tf-init"
      name: "Run terraform init"
      run: terraform init
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - id: "tf-validate"
      name: "Run terraform validate"
      run: terraform validate -no-color
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - id: cache-tools
      name: Cache Tools
      uses: actions/cache@v3
      with:
        path: ~/.local/share/aquaproj-aqua
        key: cache-tools-${{ hashFiles('$GITHUB_WORKSPACE"/aqua.yaml') }}

    - id: aqua-installer
      uses: aquaproj/aqua-installer@v2.1.2
      with:
        aqua_version: v2.10.1
        aqua_opts: ""

    - id: "tfcmt"
      name: Terraform apply
      run: |
        if [ -n "$PR_HEAD_SHA" ]; then
          export GITHUB_SHA=$PR_HEAD_SHA
        fi
        tfcmt -owner "$OWNER" -repo "$REPO" -pr "$PR_NUMBER" \
              -var "target:${{ inputs.working-directory }}" apply \
              -- terraform apply -auto-approve
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        PR_NUMBER: ${{ github.event.number }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
