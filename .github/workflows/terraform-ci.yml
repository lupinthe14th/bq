---
name: terraform-ci
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  determine-workdir:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    outputs:
      workdirs: ${{ steps.filter.outputs.workdirs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: .github/path-filter.yml

      - name: filter
        id: filter
        run: |
          WORKDIRS=$(echo '${{ toJSON(steps.changes.outputs) }}' | jq '. | to_entries[] | select(.value == "true" and .key != "base") | .key')
          echo "workdirs=$(echo "$WORKDIRS" | jq -sc '.')" >> "$GITHUB_OUTPUT"

  terraform-ci:
    needs: determine-workdir
    if: needs.determine-workdir.outputs.workdirs != '[]'
    timeout-minutes: 5
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      issues: write
      pull-requests: write
    strategy:
      fail-fast: false
      max-parallel: ${{ startsWith(github.head_ref , 'renovate/terraform-provider-version') && 1 || 20 }}
      matrix:
        workdir: ${{ fromJSON(needs.determine-workdir.outputs.workdirs) }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set environment variables for each env
        run: |
          ENV=$(echo "${{ matrix.workdir }}" | cut -d '/' -f2)
          yq "with_entries(select(.key == \"$ENV\")) | .$ENV" .github/account-mapping.yml -o props | tr -d " " >> "$GITHUB_ENV"

      - uses: ./.github/actions/terraform-ci/
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ matrix.workdir }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

  # This job is used for branch protection rule
  # Add this job to `Status checks that are required`
  status-check:
    runs-on: ubuntu-latest
    needs: [terraform-ci, determine-workdir]
    if: failure()
    steps:
      - run: exit 1
